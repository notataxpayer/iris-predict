name: CI

on:
  push:
    branches: ["main"]
    paths:
      - '**/*.py'
      - 'requirements.txt'
      - '.github/workflows/CI.yml'
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test with pytest
        run: pytest

      - name: Train & predict
        run: |
          mkdir -p artifacts
          python iris_classification.py --csv iris.csv
          python iris_classification.py --csv iris.csv --predict-file iris.csv --out-pred artifacts/predictions.csv

      - name: Upload model & predictions
        uses: actions/upload-artifact@v4
        with:
          name: iris-build-artifacts
          path: |
            artifacts/iris_model.joblib
            artifacts/predictions.csv
          if-no-files-found: error

  docker_push:
    needs: build
    runs-on: local-linuxbuntu
    permissions:
      contents: read
      packages: write
    env:
      REGISTRY: ghcr.io
      IMAGE: ${{ github.repository }}
      TAG1: latest
      TAG2: ${{ github.sha }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push (latest + sha)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE }}:${{ env.TAG1 }}
            ${{ env.REGISTRY }}/${{ env.IMAGE }}:${{ env.TAG2 }}

  docker_image_artifact:
    needs: docker_push
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    env:
      REGISTRY: ghcr.io
      IMAGE: ${{ github.repository }}
      TAG: ${{ github.sha }}
    steps:
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull image (by sha tag)
        run: docker pull $REGISTRY/$IMAGE:$TAG

      - name: Save image to tar
        run: docker save $REGISTRY/$IMAGE:$TAG -o iris_image_${TAG}.tar

      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v4
        with:
          name: iris-docker-image
          path: iris_image_${{ env.TAG }}.tar
          if-no-files-found: error
